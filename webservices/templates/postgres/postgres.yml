{{- if .Values.postgres_config.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 3
  labels:
    io.kompose.service: {{ .Release.Name }}-postgres
  name: {{ .Release.Name }}-postgres
  namespace: {{ .Release.Namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      io.kompose.service: {{ .Release.Name }}-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: {{ .Release.Name }}-postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgres_config.setup.password }}
        image: {{ .Values.postgres_config.image }}
        imagePullPolicy: Always
        name: {{ .Release.Name }}-postgres
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: {{ .Release.Name }}-postgres-claim
          subPath: postgres
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: {{ .Release.Name }}-postgres-claim
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-postgres-claim
{{- end}}